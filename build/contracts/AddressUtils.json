{
  "contractName": "AddressUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/SoluLab/XinFin/Matic Nft Subgraph/contracts/AddressUtils.sol\":\"AddressUtils\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/SoluLab/XinFin/Matic Nft Subgraph/contracts/AddressUtils.sol\":{\"keccak256\":\"0xa3511d5947d520f55f9789e9fc52664f080e474cb0f8465ac2c1f3a3561f6ddc\",\"urls\":[\"bzzr://ddf23ae376763cd74a62b3213c8590562f361d62855f24e22a78722c24aca6f9\"]}},\"version\":1}",
  "bytecode": "0x604c602c600b82828239805160001a60731460008114601c57601e565bfe5b5030600052607381538281f30073000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820f6a3eb22ffebb75b1661ed47efb9dbbb182f55569c6782abfd512f698a2beabf0029",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fd00a165627a7a72305820f6a3eb22ffebb75b1661ed47efb9dbbb182f55569c6782abfd512f698a2beabf0029",
  "sourceMap": "93:943:0:-;;132:2:-1;166:7;155:9;146:7;137:37;252:7;246:14;243:1;238:23;232:4;229:33;270:1;265:20;;;;222:63;;265:20;274:9;222:63;;298:9;295:1;288:20;328:4;319:7;311:22;352:7;343;336:24",
  "deployedSourceMap": "93:943:0:-;;;;;;;;",
  "source": "pragma solidity ^0.4.24;\r\n\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary AddressUtils {\r\n\r\n  /**\r\n   * Returns whether the target address is a contract\r\n   * @dev This function will return false if invoked during the constructor of a contract,\r\n   *  as the code is not actually created until after the constructor finishes.\r\n   * @param addr address to check\r\n   * @return whether the target address is a contract\r\n   */\r\n  function isContract(address addr) internal view returns (bool) {\r\n    uint256 size;\r\n    // XXX Currently there is no better way to check if there is a contract in an address\r\n    // than to check the size of the code at that address.\r\n    // See https://ethereum.stackexchange.com/a/14016/36603\r\n    // for more details about how this works.\r\n    // TODO Check this again before the Serenity release, because all addresses will be\r\n    // contracts then.\r\n    assembly { size := extcodesize(addr) }  // solium-disable-line security/no-inline-assembly\r\n    return size > 0;\r\n  }\r\n\r\n}",
  "sourcePath": "D:/SoluLab/XinFin/Matic Nft Subgraph/contracts/AddressUtils.sol",
  "ast": {
    "absolutePath": "/D/SoluLab/XinFin/Matic Nft Subgraph/contracts/AddressUtils.sol",
    "exportedSymbols": {
      "AddressUtils": [
        18
      ]
    },
    "id": 19,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "Utility library of inline functions on addresses\r",
        "fullyImplemented": true,
        "id": 18,
        "linearizedBaseContracts": [
          18
        ],
        "name": "AddressUtils",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16,
              "nodeType": "Block",
              "src": "516:515:0",
              "statements": [
                {
                  "assignments": [],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9,
                      "name": "size",
                      "nodeType": "VariableDeclaration",
                      "scope": 17,
                      "src": "523:12:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 8,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 10,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "523:12:0"
                },
                {
                  "externalReferences": [
                    {
                      "size": {
                        "declaration": 9,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "925:4:0",
                        "valueSize": 1
                      }
                    },
                    {
                      "addr": {
                        "declaration": 3,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "945:4:0",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 11,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    size := extcodesize(addr)\n}",
                  "src": "914:102:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12,
                      "name": "size",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1017:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1024:1:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1017:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 7,
                  "id": 15,
                  "nodeType": "Return",
                  "src": "1010:15:0"
                }
              ]
            },
            "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\n as the code is not actually created until after the constructor finishes.\r\n@param addr address to check\r\n@return whether the target address is a contract\r",
            "id": 17,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "isContract",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3,
                  "name": "addr",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "473:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "473:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "472:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 7,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 17,
                  "src": "510:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "509:6:0"
            },
            "scope": 18,
            "src": "453:578:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 19,
        "src": "93:943:0"
      }
    ],
    "src": "0:1036:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/D/SoluLab/XinFin/Matic Nft Subgraph/contracts/AddressUtils.sol",
      "exportedSymbols": {
        "AddressUtils": [
          18
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.4",
            ".24"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "Utility library of inline functions on addresses\r",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            18
          ],
          "name": "AddressUtils",
          "scope": 19
        },
        "children": [
          {
            "attributes": {
              "constant": true,
              "documentation": "Returns whether the target address is a contract\r\n@dev This function will return false if invoked during the constructor of a contract,\r\n as the code is not actually created until after the constructor finishes.\r\n@param addr address to check\r\n@return whether the target address is a contract\r",
              "implemented": true,
              "isConstructor": false,
              "modifiers": [
                null
              ],
              "name": "isContract",
              "payable": false,
              "scope": 18,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "addr",
                      "scope": 17,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "type": "address"
                        },
                        "id": 2,
                        "name": "ElementaryTypeName",
                        "src": "473:7:0"
                      }
                    ],
                    "id": 3,
                    "name": "VariableDeclaration",
                    "src": "473:12:0"
                  }
                ],
                "id": 4,
                "name": "ParameterList",
                "src": "472:14:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 17,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 5,
                        "name": "ElementaryTypeName",
                        "src": "510:4:0"
                      }
                    ],
                    "id": 6,
                    "name": "VariableDeclaration",
                    "src": "510:4:0"
                  }
                ],
                "id": 7,
                "name": "ParameterList",
                "src": "509:6:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        null
                      ],
                      "initialValue": null
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "size",
                          "scope": 17,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 8,
                            "name": "ElementaryTypeName",
                            "src": "523:7:0"
                          }
                        ],
                        "id": 9,
                        "name": "VariableDeclaration",
                        "src": "523:12:0"
                      }
                    ],
                    "id": 10,
                    "name": "VariableDeclarationStatement",
                    "src": "523:12:0"
                  },
                  {
                    "attributes": {
                      "externalReferences": [
                        {
                          "size": {
                            "declaration": 9,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "925:4:0",
                            "valueSize": 1
                          }
                        },
                        {
                          "addr": {
                            "declaration": 3,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "945:4:0",
                            "valueSize": 1
                          }
                        }
                      ],
                      "operations": "{\n    size := extcodesize(addr)\n}"
                    },
                    "children": [],
                    "id": 11,
                    "name": "InlineAssembly",
                    "src": "914:102:0"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 7
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": ">",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9,
                              "type": "uint256",
                              "value": "size"
                            },
                            "id": 12,
                            "name": "Identifier",
                            "src": "1017:4:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 13,
                            "name": "Literal",
                            "src": "1024:1:0"
                          }
                        ],
                        "id": 14,
                        "name": "BinaryOperation",
                        "src": "1017:8:0"
                      }
                    ],
                    "id": 15,
                    "name": "Return",
                    "src": "1010:15:0"
                  }
                ],
                "id": 16,
                "name": "Block",
                "src": "516:515:0"
              }
            ],
            "id": 17,
            "name": "FunctionDefinition",
            "src": "453:578:0"
          }
        ],
        "id": 18,
        "name": "ContractDefinition",
        "src": "93:943:0"
      }
    ],
    "id": 19,
    "name": "SourceUnit",
    "src": "0:1036:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-08-03T06:00:24.384Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}